<Page
    Name="pagePrincipal"
    x:Class="_14_CRUDPersonasUWP_UI.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="_14_CRUDPersonasUWP_UI"
    xmlns:Converter="using:_14_CRUDPersonasUWP_UI.ViewModels.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:_14_CRUDPersonasUWP_UI.ViewModels"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <Converter:clsConverterFechaCorta x:Key="fechaCorta"></Converter:clsConverterFechaCorta>
        <Converter:clsConverterPersonaSeleccionada x:Key="personaSeleccionada"></Converter:clsConverterPersonaSeleccionada>
    </Page.Resources>

    <RelativePanel Margin="20" BorderBrush="Black" BorderThickness="1" Background="FloralWhite">
        
        <!--StackPanel con los botones (guardar,eliminar,...)-->
        <StackPanel Name="stkBotones" Orientation="Horizontal" RelativePanel.AlignTopWithPanel="True" 
                    RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True"
                    BorderBrush="Black" BorderThickness="0,0,0,1" Background="AliceBlue">

            <Button Name="btnActualizar" Width="40" Height="40" Command="{x:Bind ViewModel.actualizarListadoCommand}" Background="AliceBlue">
                <Button.Content>
                    <Image Source="../Assets/reload.png"></Image>
                </Button.Content>
            </Button>

            <Button Name="btnGuardar" Width="40" Height="40" Command="{x:Bind ViewModel.guardarCommand}" Background="AliceBlue">
                <Button.Content>
                    <Image Source="../Assets/save.png"></Image>
                </Button.Content>
            </Button>

            <Button Name="btnInsertar" Width="40" Height="40" Command="{x:Bind ViewModel.insertarCommand}" Background="AliceBlue">
                <Button.Content>
                    <Image Source="../Assets/add.png"></Image>
                </Button.Content>
            </Button>

            <Button Name="btnEliminar" Width="40" Height="40" Command="{x:Bind ViewModel.eliminarCommand}" Background="AliceBlue">
                <Button.Content>
                    <Image Source="../Assets/delete.png"></Image>
                </Button.Content>
            </Button>

            <TextBox MinWidth="200" Margin="50,5,0,5" Text="{x:Bind ViewModel.textoBuscar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="30"></TextBox>
            <AppBarButton Icon="Find" Width="20"></AppBarButton>

        </StackPanel>
        
        
        <!--listado de las personas de la BBDD-->
        <ListView Name="lv" ItemsSource="{x:Bind ViewModel.listadoPersonas, Mode=TwoWay}"
                  SelectedItem="{x:Bind ViewModel.personaSeleccionada, Mode=TwoWay, Converter={StaticResource personaSeleccionada}}" 
                  BorderBrush="Black" BorderThickness="0,0,1,0" RelativePanel.Below="stkBotones"
                  RelativePanel.AlignBottomWithPanel="True" Background="AntiqueWhite">

            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Margin="20,20,20,10">
                        <TextBlock Text="{Binding Path=nombre}"></TextBlock>
                        <TextBlock Text="{Binding Path=apellidos}" Margin="5,0,0,0"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
            
        </ListView>

        <!--Grid con los detalles de las persona seleccionada-->
        <Grid Name="grid" RelativePanel.RightOf="lv" Margin="80,60,0,0" RelativePanel.Below="stkBotones" Visibility="{x:Bind ViewModel.formularioVisible, Mode=TwoWay}">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <TextBlock Name="txbID" Visibility="Collapsed" Text="{x:Bind Path=ViewModel.personaSeleccionada.idPersona, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            
            <TextBlock Text="Nombre:" Grid.Row="0"></TextBlock>
            <TextBox Name="txbNombre" Grid.Column="1" Text="{x:Bind Path=ViewModel.personaSeleccionada.nombre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="30,0,0,10" MinWidth="120" Background="White"></TextBox>
            <TextBlock Text="Apellidos:" Grid.Row="1"></TextBlock>
            <TextBox Name="txbApellidos" Grid.Row="1" Grid.Column="1" Text="{x:Bind Path=ViewModel.personaSeleccionada.apellidos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="30,0,0,10" Background="White"></TextBox>
            <TextBlock Text="Fecha nacimiento: " Grid.Row="2"></TextBlock>
            <TextBox Name="txbFechaNac" Grid.Row="2" Grid.Column="1" Text="{x:Bind Path=ViewModel.personaSeleccionada.fechaNacimiento, Mode=TwoWay, Converter={StaticResource fechaCorta}, UpdateSourceTrigger=PropertyChanged}" Margin="30,0,0,10" Background="White"></TextBox>
            <TextBlock Text="Telefono:" Grid.Row="3"></TextBlock>
            <TextBox Name="txbTelefono" Grid.Row="3" Grid.Column="1" Text="{x:Bind Path=ViewModel.personaSeleccionada.telefono, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="30,0,0,10" Background="White"></TextBox>
            <TextBlock Text="Direccion:" Grid.Row="4"></TextBlock>
            <TextBox Name="txbDireccion" Grid.Row="4" Grid.Column="1" Text="{x:Bind Path=ViewModel.personaSeleccionada.direccion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="30,0,0,10" Background="White"></TextBox>

            <!--<TextBlock Visibility="Collapsed" Text="idDepartamento:" Grid.Row="5"></TextBlock>-->
            <TextBox Visibility="Collapsed" Name="txbIdDepart" Grid.Row="5" Grid.Column="1" Text="{x:Bind Path=ViewModel.personaSeleccionada.idDepartamento, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="30,0,0,10" Background="White"></TextBox>
            
        </Grid>
        
            <!--listado departamentos-->
        <!--<ComboBox Name="cbox" ItemsSource="{x:Bind ViewModel.listadoDepartamentos}"
                  Visibility="{x:Bind ViewModel.formularioVisible, Mode=TwoWay}" SelectedValuePath="id"
                  SelectedValue="{x:Bind Path=ViewModel.personaSeleccionada.idDepartamento, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  BorderBrush="Black" BorderThickness="1" MinWidth="120" Background="White"
                  RelativePanel.Below="grid" RelativePanel.RightOf="lv" Margin="80,20,0,0"
                  >

            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=id}"></TextBlock>
                        <TextBlock Text="{Binding Path=nombre}" Margin="5,0,0,0"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>-->
        
    </RelativePanel>
</Page>
